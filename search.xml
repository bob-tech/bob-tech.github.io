<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Java lambda 方法使用(2)</title>
      <link href="/2018/12/08/Java-lambda02/"/>
      <url>/2018/12/08/Java-lambda02/</url>
      
        <content type="html"><![CDATA[<p>在项目中有大量使用java的lambda表达式。对初学者而言，在使用的方式和java中已经实现的模板方法有些不了解，于是整理下一些常用的使用函数。以下的表达式和统计相关的操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Lists.newArrayList(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;10&quot;);</span><br><span class="line"></span><br><span class="line">IntSummaryStatistics collect = list.stream().collect(Collectors.summarizingInt(Integer::valueOf));</span><br><span class="line">long sum = collect.getSum();//和</span><br><span class="line">long count = collect.getCount();//计数</span><br><span class="line">double average = collect.getAverage();//平均值</span><br><span class="line">int max = collect.getMax();//最大值</span><br><span class="line">int min = collect.getMin();//最小值</span><br><span class="line"></span><br><span class="line">System.out.printf(&quot;sum = %d,count=%d,average = %f,min=%d,max%d\n&quot;, sum,count,average,min,max);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BinaryOperator&lt;String&gt; accumulator = (x,y) -&gt; x.concat(y);</span><br><span class="line">String reduce = list.stream().reduce(&quot;start:&quot;, accumulator);</span><br><span class="line">System.out.println(reduce);//start:12345678910</span><br><span class="line"></span><br><span class="line">Optional&lt;String&gt; reduce2 = list.stream().reduce(accumulator);</span><br><span class="line">System.out.println(reduce2);//Optional[12345678910]</span><br><span class="line"></span><br><span class="line">Integer reduce3 = Stream.of(1,2,3,4,5,6,7,8,9,10).reduce(0, (x,y) -&gt; x + y);</span><br><span class="line">System.out.println(reduce3);</span><br><span class="line"></span><br><span class="line">Integer reduce4 = Stream.of(1,2,3,4,5,6,7,8,9,10).reduce(0,  (x,y) -&gt; x + y,  (x,y) -&gt; x + y);</span><br><span class="line">System.out.println(reduce4);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java lambda 方法使用(1)</title>
      <link href="/2018/12/08/Java-lambda01/"/>
      <url>/2018/12/08/Java-lambda01/</url>
      
        <content type="html"><![CDATA[<p>在项目中有大量使用java的lambda表达式。对初学者而言，在使用的方式和java中已经实现的模板方法有些不了解，于是整理下一些常用的使用函数。以下的表达式主要式过滤、分组、收集器相关</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = Lists.newArrayList(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;);</span><br><span class="line">//打印元素</span><br><span class="line">list.stream().forEach(x -&gt;&#123;</span><br><span class="line">System.out.println(x);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//打印元素</span><br><span class="line">list.stream().forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">//过滤元素</span><br><span class="line">List&lt;String&gt; collect = list.stream()</span><br><span class="line">.filter(x -&gt; Integer.valueOf(x) % 2 == 0)</span><br><span class="line">.collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">//判断元素是否满足预判条件，全部满足</span><br><span class="line">boolean allMatch = list.stream().allMatch(x -&gt; Integer.valueOf(x) % 2 == 0);</span><br><span class="line"></span><br><span class="line">//判断元素是否满足预判条件,只要有一个满足</span><br><span class="line">boolean anyMatch = list.stream().anyMatch(x -&gt; Integer.valueOf(x) % 2 == 0);</span><br><span class="line"></span><br><span class="line">//分组</span><br><span class="line">Map&lt;Integer, List&lt;String&gt;&gt; collect2 = list.stream()</span><br><span class="line">.collect(Collectors.groupingBy(x -&gt; Integer.valueOf(x) % 4));</span><br><span class="line"></span><br><span class="line">//特殊的，分成两组</span><br><span class="line">Map&lt;Boolean, List&lt;String&gt;&gt; collect3 = list.stream()</span><br><span class="line">.collect(Collectors.partitioningBy(x -&gt; Integer.valueOf(x) % 2 == 0));</span><br><span class="line"></span><br><span class="line">//转Map</span><br><span class="line">Map&lt;String, String&gt; collect4 = list.stream()</span><br><span class="line">.collect(Collectors.toMap(x -&gt; &quot;key&quot; + x, x -&gt; &quot;value&quot; + x));</span><br><span class="line"></span><br><span class="line">//指定返回集合</span><br><span class="line">TreeSet&lt;String&gt; collect5 = list.stream()</span><br><span class="line">.collect(Collectors.toCollection(() -&gt; new TreeSet&lt;String&gt;()));</span><br><span class="line"></span><br><span class="line">//map转换</span><br><span class="line">List&lt;Integer&gt; collect6 = list.stream().map(x -&gt; Integer.valueOf(x)).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">//mapToInt,并求和</span><br><span class="line">list.stream().mapToInt(new ToIntFunction&lt;String&gt;() &#123;</span><br><span class="line">@Override</span><br><span class="line">public int applyAsInt(String value) &#123;</span><br><span class="line">return Integer.valueOf(value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;).sum();</span><br><span class="line"></span><br><span class="line">//自定义收集器</span><br><span class="line">Supplier&lt;StringBuffer&gt; supplier = () -&gt; new StringBuffer(&quot;&quot;);</span><br><span class="line">BiConsumer&lt;StringBuffer,String&gt; accumulator = (x,y) -&gt; x.append(y);</span><br><span class="line">BiConsumer&lt;StringBuffer,StringBuffer&gt; combiner = (x,y) -&gt; x.append(y);</span><br><span class="line">StringBuffer collect7 = list.stream().collect(supplier , accumulator , combiner);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
